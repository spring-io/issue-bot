plugins {
	id "checkstyle"
	id "java"
	id "io.spring.javaformat" version "0.0.43"
	id "org.springframework.boot" version "3.4.2"
}

group = "io.spring.issuebot"

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")

	checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:0.0.43")

	implementation(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	implementation("org.apache.httpcomponents.client5:httpclient5")
	implementation("org.springframework.boot:spring-boot-starter-web")

	runtimeOnly(platform("com.azure.spring:spring-cloud-azure-dependencies:5.20.0"))
	runtimeOnly("com.azure.spring:spring-cloud-azure-starter-keyvault-secrets")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
}

checkstyle {
	toolVersion = "10.21.2"
}

java {
	sourceCompatibility = "17"
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

tasks.withType(Test).configureEach {
	useJUnitPlatform()
}
